package com.froi.arbolactivador.gramaticas;

import java_cup.runtime.*;
import javax.swing.JOptionPane;

class GramaticaParser;

parser code {:

    public GramaticaParser(GramaticaLexer lexer) {
        super(lexer);
    }
    public void report_error(String message, Object info) {
        System.out.println("reporterror");
        JOptionPane.showMessageDialog(null, "Gramática erronea");
    }
    public void report_fatal_error(String message, Object info) {
        System.out.println("reportfatal");
        JOptionPane.showMessageDialog(null, "Gramática erronea");
    }
    public void syntax_error(Symbol cur_token) {
        System.out.println("syntaxerr " + symbl_name_from_id(cur_token.sym) + " " + cur_token.left + " - " + cur_token.right);
        JOptionPane.showMessageDialog(null, "Gramática erronea");
    }
    protected int error_sync_size() {
        return 1;
    }

:}


//Declaracion de simbolos terminales
terminal PROGRAMA, PROCEDIMIENTO, PARAM, PARAMS, BEGIN, END, PUNTOS, PUNTO_COMA, IGUAL, PARA, PARC, ALFANUMERICO, INTEGER;

//Declaracion de simbolos no terminales
non terminal inicio, instrucciones, procesos, parametro, proceso_begin, proceso_individual, cuerpo_proceso, cuerpo_proceso_p, cuerpo_begin, instruccion_begin, declaracion_variable, asignacion_valor, ejecucion_metodo;

start with inicio;

inicio ::=  PROGRAMA ALFANUMERICO instrucciones         {:JOptionPane.showMessageDialog(null, "Gramática analizada con éxito");:}
            ;

instrucciones ::=   procesos proceso_begin
                    ;

procesos ::=    procesos proceso_individual
                | proceso_individual
                ;

proceso_individual ::=  PROCEDIMIENTO ALFANUMERICO PARA PARAM PARC cuerpo_proceso END
                        ;

cuerpo_proceso ::=  cuerpo_proceso cuerpo_proceso_p
                    | cuerpo_proceso_p
                    ;

cuerpo_proceso_p ::=    ALFANUMERICO PARA parametro PARC 
                        ;

parametro ::=   ALFANUMERICO
                |
                ;

proceso_begin ::=   BEGIN cuerpo_begin END
                    ;


cuerpo_begin ::=    instruccion_begin cuerpo_begin
                    | instruccion_begin
                    ;

instruccion_begin ::=   declaracion_variable
                        | asignacion_valor
                        | ejecucion_metodo
                        ;    

declaracion_variable ::=    ALFANUMERICO PUNTOS INTEGER PUNTO_COMA
                            ;

asignacion_valor ::=    ALFANUMERICO PUNTOS IGUAL ejecucion_metodo
                        ;

ejecucion_metodo ::=    ALFANUMERICO PARA PARAMS PARC PUNTO_COMA
                        ;
